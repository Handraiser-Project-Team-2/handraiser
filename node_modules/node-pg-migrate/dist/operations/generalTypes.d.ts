import PgLiteral from './PgLiteral';
export declare type LiteralUnion<T extends U, U = string> = T | (U & {
    zz_IGNORE_ME?: never;
});
export declare type Value = null | boolean | string | number | PgLiteral | Value[];
export declare type Type = string | {
    type: string;
};
export declare type Name = string | {
    schema?: string;
    name: string;
};
export interface IfNotExistsOption {
    ifNotExists?: boolean;
}
export interface IfExistsOption {
    ifExists?: boolean;
}
export interface CascadeOption {
    cascade?: boolean;
}
export declare type DropOptions = IfExistsOption & CascadeOption;
